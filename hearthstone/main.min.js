/*! principalfish 02-04-2017 */
function getData(){$.when($.getJSON("cards_simple.json",function(a){cardData=a})).then(function(){pageLoad()})}function pageLoad(){$.each(cardData,function(a,b){b.filtered=!0}),filters.resetFilter(),filters.filter()}function initialization(){$(document).ready(function(){getData()})}var dict={class:{NEUTRAL:"neutral",WARRIOR:"warrior",ROGUE:"rogue",MAGE:"mage",PALADIN:"paladin",PRIEST:"priest",DRUID:"druid",WARLOCK:"warlock",SHAMAN:"shaman",HUNTER:"hunter"},classText:{NEUTRAL:"Neutral",WARRIOR:"Warrior",ROGUE:"Rogue",MAGE:"Mage",PALADIN:"Paladin",PRIEST:"Priest",DRUID:"Druid",WARLOCK:"Warlock",SHAMAN:"Shaman",HUNTER:"Hunter"},type:{MINION:"Minion",SPELL:"Spell",WEAPON:"Weapon"},rarity:{LEGENDARY:"Legendary",EPIC:"Epic",RARE:"Rare",COMMON:"Common",FREE:"Free"},set:{BRM:"Blackrock",EXPERT1:"Expert",OG:"Old Gods",TGT:"Grand Tourney",GANGS:"Gadgetzan",KARA:"Karazhan",CORE:"Core",LOE:"Explorers",GVG:"Goblins/Gnomes"}},filters={filterStates:{},filterStatesDefault:{class:{NEUTRAL:!0,WARRIOR:!0,ROGUE:!0,MAGE:!0,PALADIN:!0,PRIEST:!0,DRUID:!0,WARLOCK:!0,SHAMAN:!0,HUNTER:!0},type:{MINION:!0,WEAPON:!0,SPELL:!0}},filteredList:[],resetFilter:function(){filters.filterStates=jQuery.extend(!0,{},filters.filterStatesDefault)},handle:function(a){params=a.split("-"),params[2]=params[2].toUpperCase(),filters.filterStates[params[1]][params[2]]=!filters.filterStates[params[1]][params[2]],1==filters.filterStates[params[1]][params[2]]?($("#"+a).removeClass("not-selected"),$("#"+a).addClass("selected")):($("#"+a).removeClass("selected"),$("#"+a).addClass("not-selected")),filters.filter()},filter:function(){filters.filteredList=[],sort.resetSort(),$.each(cardData,function(a,b){b.filtered=!0,1!=filters.filterStates.class[b.cardClass]?b.filtered=!1:1!=filters.filterStates.type[b.type]&&(b.filtered=!1),1==b.filtered&&filters.filteredList.push(b)}),sort.sortData("name","asc"),filters.writeTable()},writeTable:function(){$("#display-cardstotal").text(filters.filteredList.length),$("#display-table-data").empty(),$.each(filters.filteredList,function(a,b){var c="</div><div>",d="<div class='"+dict.class[b.cardClass]+"'><div>";d+=b.name+c+dict.classText[b.cardClass]+c+dict.type[b.type]+c+dict.rarity[b.rarity]+c+dict.set[b.set]+c+b.cost+"</div></div>",$("#display-table-data").append(d)})}},cardData=[];initialization();var sort={sortStates:{},sortStatesDefault:{name:"asc",cardClass:"desc",type:"desc",rarity:"desc",set:"desc",cost:"desc"},resetSort:function(){sort.sortStates=jQuery.extend(!0,{},sort.sortStatesDefault)},sortTable:function(a){sort.changeHeader(a),a=a.slice(8),"asc"==sort.sortStates[a]?(sort.sortStates[a]="desc",sort.sortData(a,"desc")):"desc"==sort.sortStates[a]&&(sort.sortStates[a]="asc",sort.sortData(a,"asc")),filters.writeTable()},changeHeader:function(a){$(".sort-active").removeClass(),$("#"+a).addClass("sort-active")},sortData:function(a,b){var c=filters.filteredList.map(function(a,b){return{ind:b,data:a}});"asc"==b&&c.sort(function(b,c){return b.data[a]<c.data[a]?-1:b.data[a]>c.data[a]?1:b.ind-c.ind}),"desc"==b&&c.sort(function(b,c){return b.data[a]<c.data[a]?1:b.data[a]>c.data[a]?-1:b.ind-c.ind}),filters.filteredList=c.map(function(a){return a.data})}};